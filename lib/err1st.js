// Generated by CoffeeScript 1.7.1
(function() {
  var Err1st,
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
    __slice = [].slice;

  Err1st = (function(_super) {
    __extends(Err1st, _super);

    function Err1st() {
      var msgData, phrase;
      phrase = arguments[0], msgData = 2 <= arguments.length ? __slice.call(arguments, 1) : [];
      this.msgData = msgData;
      Error.captureStackTrace(this, arguments.callee);
      if (phrase instanceof Error) {
        this.message = phrase.message;
        this.phrase = phrase.message;
      } else {
        this.message = phrase;
        this.phrase = phrase;
      }
      this.name = 'Err1st';
      Object.defineProperties(this, {
        longcode: {
          get: function() {
            return this._longcode;
          },
          set: function(longcode) {
            this._longcode = Number(longcode);
            this.code = Number(String(longcode).slice(3));
            return this.status = Number(String(longcode).slice(0, 3));
          }
        }
      });
    }

    Err1st.prototype.toJSON = function() {
      return {
        code: this.code,
        message: this.message
      };
    };

    Err1st.prototype.toCode = function() {
      return this.code;
    };

    Err1st.prototype.toStatus = function() {
      return this.status;
    };

    Err1st.prototype.toPhrase = function() {
      return this.phrase;
    };

    Err1st.prototype.toMsg = function() {
      return this.message;
    };

    Err1st.prototype.stringify = function() {
      return JSON.stringify(this.toJSON());
    };

    return Err1st;

  })(Error);

  module.exports = Err1st;

}).call(this);
